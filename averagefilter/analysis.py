# Этот скрипт анализирует частотные характеристики скользящего среднего фильтра 
# (moving average filter) длиной N=7 с частотой дискретизации 200 Гц.
# N = 7 — длина фильтра, то есть сколько последних значений мы усредняем.
# sample_rate = 200 — частота дискретизации сигнала в герцах.
# b = np.ones(N) — коэффициенты фильтра: все единицы (т.к. фильтр усредняет значения).
# a = [N, 0, 0, ..., 0] — знаменатель фильтра в форме полинома (для данного FIR фильтра так задан).


# encoding: UTF-8
from scipy.optimize import newton
from scipy.signal import freqz
from math import sin, cos, sqrt, pi
import numpy as np
import matplotlib.pyplot as plt

# Функция для вычисления частоты среза скользящего среднего фильтра 
# Эта функция находит частоту (в радианах в секунду), где амплитуда фильтра упадет до -3 дБ (точка среза).

def get_filter_cutoff(N, **kwargs):
    func = lambda w: sin(N*w/2) - N/sqrt(2) * sin(w/2)
    deriv = lambda w: cos(N*w/2) * N/2 - N/sqrt(2) * cos(w/2) / 2
    omega_0 = pi/N  # Начальное приближение
    return newton(func, omega_0, deriv, **kwargs)

# Частота дискретизации
sample_rate = 200  # Гц
N = 14  # Длина фильтра

# Вычисляем частоту среза
w_c = get_filter_cutoff(N)
cutoff_freq = w_c * sample_rate / (2 * pi)

# Параметры фильтра
b = np.ones(N)  # Коэффициенты числителя (единицы для среднего)
a = np.array([N] + [0]*(N-1))  # Коэффициенты знаменателя

# Частотная характеристика
# Результат h — комплексная частотная характеристика.
# Частоты w переводятся в герцы, исходя из частоты дискретизации.
w, h = freqz(b, a, worN=4096)
w *= sample_rate / (2 * pi)  # Преобразуем в Гц

# Рисуем графики (диаграмму Боде)
plt.subplot(2, 1, 1)
plt.suptitle("Диаграмма Боде скользящего среднего фильтра")
plt.plot(w, 20 * np.log10(abs(h)))  # Амплитудная характеристика в дБ
plt.ylabel('Амплитуда [дБ]')
plt.xlim(0, sample_rate / 2)
plt.ylim(-60, 10)
plt.axvline(cutoff_freq, color='red', linestyle='--', label=f'Частота среза ~ {cutoff_freq:.2f} Гц')
plt.axhline(-3.01, linewidth=0.8, color='black', linestyle=':')
plt.legend()

plt.subplot(2, 1, 2)
plt.plot(w, 180 * np.angle(h) / pi)  # Фазовая характеристика в градусах
plt.xlabel('Частота [Гц]')
plt.ylabel('Фаза [°]')
plt.xlim(0, sample_rate / 2)
plt.ylim(-180, 90)
plt.axvline(cutoff_freq, color='red', linestyle='--')
plt.show()

# Амплитудно-частотная характеристика (АЧХ)
# По горизонтали — частота в Герцах.
#По вертикали — амплитуда в децибелах (дБ).
#Смотрим на форму графика:
#При низких частотах амплитуда близка к 0 дБ — значит, сигнал проходит практически без изменений.
#При более высоких частотах амплитуда падает — фильтр подавляет высокочастотные составляющие, то есть убирает шумы и резкие скачки.
#Такой фильтр называется низкочастотным фильтром — он пропускает низкие частоты и подавляет высокие.

#Красная пунктирная линия на первом графике
#Она показывает "границу", после которой фильтр начинает активно ослаблять сигнал.

#Фазово-частотная характеристика (ФЧХ)?
#Фаза — это сдвиг сигнала по времени на разных частотах.
#Частоты на оси X, фаза в градусах по оси Y.
#Если фаза линейна по частоте, то сигнал задерживается равномерно во времени без искажений формы.
#У скользящего среднего фильтра фаза примерно линейна — это значит, что форма сигнала сохраняется, 
#искажения минимальны.